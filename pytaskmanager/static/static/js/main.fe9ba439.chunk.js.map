{"version":3,"sources":["login/login.js","config.js","util.js","nav-header/nav-header.js","clock/clock.js","nav-footer/nav-footer.js","node/node.js","log/log.js","terminal/terminal.js","globe/encom.js","dashboard/dashboard.js","app/app.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","updateUsername","bind","assertThisInitialized","updatePassword","handleSubmit","event","setState","target","value","ctx","$","post","url","data","done","console","log","fadeOut","onLogin","access_token","refresh_token","fail","effect","direction","distance","times","preventDefault","react_default","a","createElement","className","id","onSubmit","type","placeholder","onChange","Component","config","protocol","host","port","api_path","version","getBaseURL","with_api_path","arguments","length","undefined","base","toString","NavHeader","_this$props","render","handleRenderChange","onClick","onLogout","Clock","date","Date","_this2","timerID","setInterval","tick","clearInterval","strftime","NavFooter","clock_Clock","Node","localStorage","getItem","get","collaborations","socket","on","updateState","node","status","react_icons_kit_default","icon","circle","key","organization","name","collaboration","nodes","idx","push","renderNode","rc","renderCollaboration","Terminal","applyAddon","fit","Log","term","debounce","fitToscreen","connectSocketEvents","func","wait_ms","timeout","_len","args","Array","_key","context","clearTimeout","setTimeout","apply","emit","cols","rows","writeln","warn","destroy","close","open","screenKeys","cursorBlink","cursorStyle","fontSize","fontFamily","allowTransparency","theme","background","document","getElementById","window","addEventListener","XTerm","socket_options","transportOptions","polling","extraHeaders","Authorization","util","io","connect","ev","input","title","write","output","Globe","renderEncomGlobe","width","height","globe","ENCOM_Globe","font","tiles","grid","baseColor","markerColor","pinColor","satelliteColor","scale","dayLength","introLinesDuration","maxPins","maxMarkers","viewAngle","animate","requestAnimationFrame","append","domElement","init","iknl_marker","addMarker","addPin","hideSmoke","renderer","setClearColor","webglEl","scene","THREE","camera","position","z","setSize","add","light","set","sphere","radius","segments","map","loadTexture","createSphere","rotation","y","appendChild","render_frame","Dashboard","app","token","admin_socket","animate_globe","evt","checked","error","reason","alert","nav_header_NavHeader","Row","noGutters","Col","xs","node_Node","encom_Globe","taiwan","lat","lon","rome","palga","terminal_Terminal","log_Log","nav_footer_NavFooter","App","storage","setItem","dashboard_Dashboard","login_Login","Boolean","location","hostname","match","ajaxPrefilter","options","originalOptions","jqXHR","path","startsWith","setRequestHeader","ajaxSetup","dataType","contentType","processData","beforeSend","JSON","stringify","format","extend","String","prototype","ReactDOM","app_app","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe9ba439.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport $ from \"jquery\";\n\nimport './login.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          username: props.username,\n          password: ''\n        };\n\n        this.updateUsername = this.updateUsername.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    updateUsername(event) {\n        this.setState({username: event.target.value});\n    }\n\n    updatePassword(event) {\n        this.setState({password: event.target.value}); \n    }\n\n    handleSubmit(event) {\n        //alert('The form was submitted: ' + this.state.value);\n        // this.props.handleLogin(this.state.username, this.state.password);\n        const username = this.state.username;\n        const password = this.state.password;\n        const ctx = this;\n\n        $.post({\n            url: \"/api/token/user\",\n            data: {\n                username: username, \n                password: password\n            },\n        })\n        .done(function(data) {\n            console.log(\"successfully authenticated!\");\n\n            $('#login-form').fadeOut(200, function() {\n                console.log('notifying Application ...')\n                ctx.props.onLogin(\n                    username, \n                    data.access_token, \n                    data.refresh_token\n                );\n            });\n        })\n        .fail(function(data) {\n            console.log(\"failure:\", data);\n            \n            $('#login-form').effect(\"shake\", {\n              direction: 'left', \n              distance: 5, \n              times: 3\n            });\n        });\n\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div className=\"Login\">\n                <div className=\"login-content\">\n                    <div id=\"login-form\">\n     \n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                               <label>username</label>\n                               <input type=\"username\" className=\"form-control\" placeholder=\"username\"value={this.state.username}onChange={this.updateUsername}/>\n                            </div>\n         \n                            <div className=\"form-group\">\n                                <label>password</label>\n                                <input type=\"password\" className=\"form-control\" placeholder=\"password\"value={this.state.password}onChange={this.updatePassword}/>\n                            </div>\n         \n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                        </form>\n\n                    </div>\n                </div>\n             </div>    \n        );\n    }\n}\n\n// Exports\nexport default Login;\nexport {\n    Login\n};","const config = {\n    protocol: 'http://',\n    host: 'localhost',\n    port: 5000,\n    api_path: '/api',\n\n    version: '0.1.0'\n}\n\nexport {\n    config\n};\nexport default config;","import { config } from './config';\n\nfunction getBaseURL(with_api_path=true) {\n    var base = config.protocol + config.host;\n\n    if (config.port) {\n        base = base + ':' + config.port.toString();\n    }\n\n    if (with_api_path) {\n        return base + config.api_path;\n    }\n\n    return base   \n}\n\nfunction getFullUrlForPath(path) {\n    let with_api_path = !path.startsWith(config.api_path);\n    return getBaseURL(with_api_path) + path\n}\n\nexport {\n    config, \n    getBaseURL,\n    getFullUrlForPath,\n}\n\n","import React, { Component } from 'react';\nimport {\n    FormGroup, Label, \n    Input\n} from 'reactstrap';\n\nimport './nav-header.css';\n\n\nclass NavHeader extends Component {\n\n    render() {\n        var {render, handleRenderChange} = this.props;\n\n        return(\n            <div className=\"NavHeader\">\n                <span>user: <b>{this.props.username}</b></span>\n\n                <span className=\"logout\">\n                    <button \n                        className=\"btn btn-warning btn-sm\"\n                        onClick={this.props.onLogout}\n                        >\n                        logout\n                    </button>\n                </span>\n\n                {/*\n                <span style={{float: 'right', marginRight: '30px'}}>\n                    <FormGroup check inline>\n                        <Label check>\n                            <Input type=\"checkbox\" checked={render} onChange={handleRenderChange} />&nbsp;Render\n                        </Label>\n                    </FormGroup>\n                </span>\n                */}\n            </div>\n        ) \n    }\n}\n\n// Exports\nexport default NavHeader;\nexport {\n    NavHeader\n};","import React, { Component } from 'react';\nimport strftime from 'strftime';\n\nimport './clock.css';\n\nclass Clock extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            date: new Date()\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"Clock\">\n                {strftime('%H:%M:%S', this.state.date)}\n            </div>\n        );\n    }\n}\n\n// Exports\nexport default Clock;\nexport {\n    Clock\n};","import React, { Component } from 'react';\n\nimport { Clock } from '../clock/clock';\n\nimport './nav-footer.css';\n\n\nclass NavFooter extends Component {\n    render() {\n        return(\n            <div className=\"NavFooter\">\n                <span className=\"right\">\n                    <Clock />\n                </span>\n            </div>\n        ) \n    }\n}\n\n// Exports\nexport default NavFooter;\nexport {\n    NavFooter\n};","import React, { Component } from 'react';\nimport Icon from 'react-icons-kit';\nimport {\n    circle\n} from 'react-icons-kit/fa';\n\nimport $ from \"jquery\";\n\nimport './node.css';\n\nclass Node extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            access_token: localStorage.getItem('access_token')\n        };\n    }\n\n    updateState(ctx) {\n        $.get({\n            url: '/api/stats'\n        }).done(function(data) {\n            ctx.setState({\n                'collaborations': data.collaborations\n            });\n        });\n    }\n\n    componentDidMount() {\n        var socket = this.props.socket;\n        var ctx = this;\n\n        if (socket) {\n            socket.on('connect', function() {\n                socket.on(\"node-status-changed\", function(data) {\n                    console.log('node-status-changed', data);\n                    ctx.updateState(ctx);\n                });            \n            });\n\n            this.updateState(this);            \n        }\n    }\n\n    renderNode(node) {\n        var status;\n\n        if (node.status === 'offline') {\n            status = <span className='small right red'><Icon icon={circle} /></span>\n        } else {\n            status = <span className='small right green'><Icon icon={circle} /></span>\n        }\n\n        return(\n            <div key={node.id}>\n                <span className=\"small\">{node.organization.name}</span>\n                {status}\n            </div>\n        )\n    }\n\n    renderCollaboration(collaboration) {\n        var nodes = [];\n        for (var idx in collaboration.nodes) {\n            nodes.push(this.renderNode(collaboration.nodes[idx]));\n        }\n\n        return(\n            <div key={collaboration.id} className=\"dashboard-collaboration\">\n                <h4>{collaboration.name}</h4>\n                {nodes}\n            </div>\n        )\n    }\n\n    render() {\n        const collaborations = this.state.collaborations;\n        var rc = [];\n\n        for (var idx in collaborations) {\n            rc.push(this.renderCollaboration(collaborations[idx]));\n        }\n\n        return(\n            <div className=\"Node\">\n                <div className=\"header\">\n                    Collaborations\n                </div>\n                <div>{rc}</div>\n            </div>\n        );\n    }\n}\n\n// Exports\nexport default Node;\nexport {\n    Node\n};","import React, { Component } from 'react';\n\nimport { Terminal } from 'xterm';\nimport * as fit from 'xterm/lib/addons/fit/fit';\n\nimport './log.css';\n\nTerminal.applyAddon(fit);\n\nclass Log extends Component {\n\n    constructor(props) {\n        super(props);\n        this.term = null;\n\n        this.debounce = this.debounce.bind(this);\n        this.fitToscreen = this.fitToscreen.bind(this);\n    }\n\n    componentDidMount() {\n        var socket = this.props.socket;\n\n        if (socket) {\n            this.connectSocketEvents(socket);\n        } else {\n            console.log('Log.componentDidMount() - no socket :-(');\n        }\n    }\n\n    debounce(func, wait_ms) {\n      let timeout\n      return function(...args) {\n        const context = this\n        clearTimeout(timeout)\n        timeout = setTimeout(() => func.apply(context, args), wait_ms)\n      }\n    }\n\n    fitToscreen() {\n        this.term.fit();\n        this.props.socket.emit(\"resize\", {\n            \"cols\": this.term.cols, \n            \"rows\": this.term.rows\n        });\n    }\n\n    connectSocketEvents(socket) {\n        // define event handlers\n        socket.on(\"append-log\", (data) => {\n            if (this.term) {\n                this.term.writeln(data);\n            } else {\n                console.warn('this.term is not set!');\n            }\n        });\n\n        socket.on('disconnect', () => {\n          console.log(\"disconnected /admin!!!!\");\n          if (this.term) {\n              this.term.destroy();\n          } else {\n              console.warn('this.term is not set!');\n          }\n\n          socket.close();\n          socket.open();\n        });\n\n        socket.on('connect', () => {\n            this.term = new Terminal({\n                screenKeys: true,\n                cursorBlink: true,\n                cursorStyle: \"underline\",\n                fontSize: 11,\n                fontFamily: 'fira_mono',\n                allowTransparency: true,\n                theme: {\n                    // background: '#0e1326'\n                    background: 'rgba(0, 0, 0, 0.0)',\n              }\n            });\n\n\n            // open the terminal\n            this.term.open(document.getElementById('log'));\n            const wait_ms = 50;\n            window.addEventListener('resize', this.debounce(this.fitToscreen, wait_ms));\n\n            this.term.fit();\n        });\n    }    \n\n    render() {\n        if (this.term) {\n            this.term.fit();        \n        }\n\n        return(\n            <div className=\"Log\">\n                <div className=\"header\">Log</div>\n\n                <div className=\"panel\">\n                    <div id=\"log\"></div>\n                </div>\n            </div>\n        );\n    };\n}\n\n// Exports\nexport default Log;\nexport {\n    Log\n};","import React, { Component } from 'react';\n\nimport io from 'socket.io-client';\n\nimport { Terminal as XTerm } from 'xterm';\nimport * as fit from 'xterm/lib/addons/fit/fit';\n\nimport * as util from '../util';\n\nimport './terminal.css';\n\nXTerm.applyAddon(fit);\n\nclass Terminal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.term = null;\n\n        this.debounce = this.debounce.bind(this);\n        this.fitToscreen = this.fitToscreen.bind(this);\n    }\n\n    componentDidMount() {\n        var token = localStorage.getItem('access_token');\n        var socket_options = {\n            transportOptions: {\n                polling: {\n                    extraHeaders: {\n                      Authorization: \"Bearer \" + token\n                    }\n                }\n            }\n        };\n\n        var host = util.getBaseURL(false) + '/pty';\n        this.socket = io.connect(host, socket_options);\n        var socket = this.socket;\n\n        socket.on('connect', () => {\n            this.term = new XTerm({\n                screenKeys: true,\n                cursorBlink: true,\n                cursorStyle: \"underline\",\n                fontSize: 11,\n                fontFamily: 'fira_mono',\n                allowTransparency: true,\n                theme: {\n                    // background: '#0e1326'\n                    background: 'rgba(0, 0, 0, 0.0)',\n                }\n            });\n            var term = this.term;\n\n            // define event handlers\n            term.on('key', (key, ev) => {\n                socket.emit(\"pty-input\", {\"input\": key})\n            });\n\n            term.on('title', (title) => {\n                console.log('title:', title)\n                document.title = title;\n            });\n\n            socket.on(\"pty-output\", function(data) {\n                term.write(data.output)\n            })\n\n            socket.on('disconnect', () => {\n                console.log(\"disconnected pty!!!!\")\n                term.destroy();\n                socket.close();\n                socket.open();\n            });\n\n            // open the terminal\n            term.open(document.getElementById('terminal'));\n            const wait_ms = 50;\n\n            window.addEventListener('resize', this.debounce(this.fitToscreen, wait_ms));\n\n            term.fit();\n        });\n    }\n\n    debounce(func, wait_ms) {\n      let timeout\n\n      return function(...args) {\n        const context = this\n        clearTimeout(timeout)\n        timeout = setTimeout(() => func.apply(context, args), wait_ms)\n      }\n    }\n\n    fitToscreen() {\n        console.log('Terminal::fitToscreen')\n        this.term.fit();\n        this.socket.emit(\"resize\", {\n            \"cols\": this.term.cols, \n            \"rows\": this.term.rows\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Terminal\">\n                <div className=\"header\">Terminal</div>\n\n                <div className=\"panel\">\n                    <div id=\"terminal\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// Exports\nexport default Terminal;\nexport {\n    Terminal\n};","/*\n * The following code is copied from/heavily inspired by:\n * https://codepen.io/Flamov/pen/MozgXb\n */\nimport React, { Component } from 'react';\n\nimport * as THREE from 'three';\nimport * as ENCOM_Globe from 'encom-globe/src/Globe';\n// import * as ENCOM_Globe from './encom/Globe';\n// import './encom-globe.js';\n\n// import * as OrbitControlsFactory from 'three-orbit-controls';\n// import { MeshLine, MeshLineMaterial } from 'three.meshline';\n\nimport $ from \"jquery\";\n\nimport grid from './encom-grid.json';\nimport './globe.css';\n\nclass Globe extends Component {\n\n    componentDidMount() {\n        this.renderEncomGlobe();\n    }\n\n    renderEncomGlobe() {\n        const width = $('#globe').width();\n        const height = $('#globe').height();\n\n        var globe = new ENCOM_Globe(width, height, {\n            font: \"monaco\",\n            // data: data.slice(), \n            tiles: grid.tiles,\n            baseColor: 'cyan',\n            markerColor: 'yellow',\n            pinColor: 'cyan',\n            satelliteColor: 'orange',\n            scale: 1.1,\n            dayLength: 1000 * 30,\n            introLinesDuration: 2000,\n            maxPins: 500,\n            maxMarkers: 500,\n            viewAngle: 0.8\n        });\n\n        $(\"#globe\").append(globe.domElement);\n        globe.init(start);\n        globe.renderer.setClearColor('#000000', 0);\n        // globe.renderer.setPixelRatio(window.devicePixelRatio);\n\n        function animate() {\n            if (globe) {\n                globe.tick();\n            }\n\n            requestAnimationFrame(animate);\n        }\n\n        function start(){\n            animate();\n\n            /* add the connected points that are in the movie */\n            setTimeout(function(){\n                var iknl_marker = globe.addMarker(52.3680, 4.9036, \"IKNL\", true, 1.1);\n                globe.addPin(52.3680, 4.9036, \"\", 1.1).hideSmoke();\n\n                var palga_marker = globe.addMarker(52.0030, 5.1858, \"PALGA\", iknl_marker, 1.3);\n                globe.addPin(52.0030, 5.1858, \"\", 1.3).hideSmoke();\n\n                var tcr_marker = globe.addMarker(23.6978, 120.9605, \"Taiwan Cancer Registry\", iknl_marker);\n                globe.addPin(23.6978, 120.9605, \"\").hideSmoke();\n\n                var ucsc_marker = globe.addMarker(41.9028, 12.4964, \"UCSC, Rome\", iknl_marker);\n                globe.addPin(41.9028, 12.4964, \"\").hideSmoke();\n            }, 2000);\n        }\n    }\n\n    renderGlobe() {\n        // Parameters\n        const width = $('#globe').width();\n        const height = $('#globe').height();\n        var webglEl = document.getElementById('globe');\n\n        var radius = 0.5,\n            segments = 32,\n            rotation = 6;  \n\n        var scene = new THREE.Scene();\n\n        var camera = new THREE.PerspectiveCamera(45, width / height, 0.01, 1000);\n        camera.position.z = 1.5;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize(width, height);\n\n        scene.add(new THREE.AmbientLight(0x333333));\n\n        var light = new THREE.DirectionalLight(0xffffff, 1);\n        light.position.set(5,3,5);\n        scene.add(light);\n\n        var sphere = createSphere(radius, segments);\n        sphere.rotation.y = rotation; \n        scene.add(sphere);\n\n        webglEl.appendChild(renderer.domElement);\n        render_frame();\n\n        function render_frame() {\n            // controls.update();\n            sphere.rotation.y += 0.0015;\n            // clouds.rotation.y += 0.0005;    \n            requestAnimationFrame(render_frame);\n            renderer.render(scene, camera);\n        }\n\n        function createSphere(radius, segments) {\n            return new THREE.Mesh(\n                new THREE.SphereGeometry(radius, segments, segments),\n                new THREE.MeshPhongMaterial({\n                    // map:         THREE.ImageUtils.loadTexture('img/map_outline.png')\n                    map:         THREE.ImageUtils.loadTexture('img/2_no_clouds_4k.jpg')\n                    // bumpMap:     THREE.ImageUtils.loadTexture('img/elev_bump_4k.jpg'),\n                    // bumpScale:   0.005,\n                    // specularMap: THREE.ImageUtils.loadTexture('img/water_4k.png'),\n                    // specular:    new THREE.Color('grey')                \n              })\n            );\n        }\n\n        function createClouds(radius, segments) {\n            return new THREE.Mesh(\n                new THREE.SphereGeometry(radius + 0.003, segments, segments),     \n                new THREE.MeshPhongMaterial({\n                    map:         THREE.ImageUtils.loadTexture('img/fair_clouds_4k.png'),\n                    transparent: true\n                })\n            );    \n        }\n\n        function createStars(radius, segments) {\n            return new THREE.Mesh(\n                new THREE.SphereGeometry(radius, segments, segments), \n                new THREE.MeshBasicMaterial({\n                    map:  THREE.ImageUtils.loadTexture('img/galaxy_starfield.png'), \n                    side: THREE.BackSide\n                })\n            );\n        }        \n    }\n\n    render() {\n        console.log(\"**** RENDERING ****\");\n        return (\n            <div className=\"Globe\">\n                <div id=\"globe\" />\n            </div>\n        );\n    }\n}\n\n// Exports\nexport default Globe;\nexport {\n    Globe\n};","import React, { Component } from 'react';\nimport {\n    Row, Col\n} from 'reactstrap';\n\nimport io from 'socket.io-client';\n\nimport * as util from '../util';\nimport { NavHeader } from '../nav-header/nav-header';\nimport { NavFooter } from '../nav-footer/nav-footer';\nimport { Node } from '../node/node';\nimport { Log } from '../log/log';\nimport { Terminal } from '../terminal/terminal';\nimport { Globe } from '../globe/encom';\n\nimport './dashboard.css';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.app = props.app;\n\n        var token = localStorage.getItem('access_token');\n        this.socket_options = {\n          transportOptions: {\n            polling: {\n              extraHeaders: {\n                Authorization: \"Bearer \" + token\n              }\n            }\n          }\n        };\n\n        var host = util.getBaseURL(false) + '/admin';\n        console.log(host);\n\n        // Terminal.applyAddon(fit);\n\n        this.state = {\n            admin_socket: io.connect(host, this.socket_options),\n            animate_globe: true\n        };\n\n        this.handleRenderChange = this.handleRenderChange.bind(this);\n    };\n\n    handleRenderChange(evt) {\n        this.setState({animate_globe: evt.target.checked});\n    }\n\n    componentDidMount() {\n        var socket = this.state.admin_socket;\n\n        socket.on('error', (error) => {\n            console.log('error: ', error);\n            this.app.onLogout();\n        });\n\n        socket.on('connect_error', (error) => {\n            console.log('connect_error: ', error);\n            // this.app.onLogout();\n        });\n\n        socket.on('disconnect', (reason) => {\n            console.log('disconnect: ', reason);\n            alert(reason);\n        });\n    };\n\n    render() {\n        var nodes = {\n            taiwan: {\n                lat: 120.9605,\n                lon: 23.6978\n            },\n            rome: {\n                lat: 12.4964,\n                lon: 41.9028            \n            },\n            palga: {\n                lat: 4.9036,\n                lon: 52.3680            \n            }\n        };\n\n        /*\n        return(\n            <div className=\"Dashboard\">\n                <NavHeader \n                    username={this.props.username} \n                    onLogout={this.props.onLogout}\n                    render={this.state.animate_globe}\n                    handleRenderChange={this.handleRenderChange}\n                    />\n\n                <Globe\n                    nodes={nodes} \n                    animate={this.state.animate_globe}\n                    />\n            </div>\n        );\n    */\n\n        return(\n            <div className=\"Dashboard\">\n                <NavHeader \n                    username={this.props.username} \n                    onLogout={this.props.onLogout}\n                    />\n\n                <Row noGutters className=\"h-100 padded\">\n                    {/* LEFT COLUMN */}\n                    <Col xs=\"3\" >\n                        <Row noGutters className=\"h-50\">\n                            <Col>\n                                <Node\n                                    app={this.app} \n                                    socket={this.state.admin_socket}\n                                    />\n                                </Col>\n                        </Row>\n\n                        <Row noGutters className=\"h-50\">\n                            <Col>\n                                <Globe nodes={nodes} />\n                            </Col>\n                        </Row>\n                    </Col>\n\n                    {/* RIGHT COLUMN */}\n                    <Col xs=\"9\">\n                        <Row noGutters className=\"h-50\">\n                            <Col>\n                                <Terminal />\n                            </Col>\n                        </Row>\n\n                        <Row noGutters className=\"h-50\">\n                            <Col>\n                                <Log \n                                    socket={this.state.admin_socket}\n                                    />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                \n                <NavFooter />\n            </div>        );\n    };}\n\n// Exports\nexport default Dashboard;\nexport {\n    Dashboard\n};","import React, { Component } from 'react';\n\nimport { Login } from '../login/login';\nimport { Dashboard } from '../dashboard/dashboard';\n\nimport './app.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.storage = window.localStorage;\n\n        this.state = {\n            access_token: this.storage.getItem('access_token'),\n            refresh_token: '',\n            username: this.storage.getItem('username') || ''\n        };     \n\n        this.onLogin = this.onLogin.bind(this);\n        this.onLogout = this.onLogout.bind(this);\n    };\n\n    onLogin(username, access_token, refresh_token) {\n        console.log('onLogin: ', username);\n        console.log('setting state ... ');\n\n        // setState triggers rerendering of components, so\n        // this has to happen *before* setState\n        this.storage.setItem('username', username);\n        this.storage.setItem('access_token', access_token);\n\n        this.setState({\n            username: username,\n            access_token: access_token,\n            refresh_token: refresh_token\n        });\n    };\n\n    onLogout() {\n        console.log('onLogout: ', this.state.username);\n\n        this.storage.setItem('access_token', '');        \n        this.storage.setItem('refresh_token', '');        \n\n        this.setState({\n            access_token: '',\n            refresh_token: ''\n        });\n    }\n\n    render() {\n        if (this.state.access_token) {\n            return(\n                <div className=\"App\">\n                    <Dashboard \n                        app={this}\n                        username={this.state.username}\n                        onLogout={this.onLogout}\n                        />\n                </div>\n            )\n        }\n\n        // console.log('No access token, displaying login screen!');\n        return(\n            <div className=\"App\">\n                <Login \n                    username={this.state.username}\n                    onLogin={this.onLogin}\n                    />\n            </div>\n        )\n    };\n}\n\n// Exports\nexport default App;\nexport {\n    App\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport $ from \"jquery\";\nimport 'jquery-ui';\nimport 'jquery-ui/ui/core';\nimport 'jquery-ui/ui/effect';\nimport 'jquery-ui/ui/effects/effect-shake';\n\nimport format from 'string-format';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'xterm/dist/xterm.css';\nimport './index.css';\n\nimport App from './app/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as util from './util';\n\n// Setup AJAX defaults\n$.ajaxPrefilter(function(options, originalOptions, jqXHR) {\n    if (!options.url.startsWith('http://') && !options.url.startsWith('https://')) {\n        // Prefix URL with base if necessary\n        options.url = util.getFullUrlForPath(options.url);\n    } else {\n        // console.log('url: ', options.url);\n    }\n\n    if (options.url !== '/api/token') {\n        var token = localStorage.getItem('access_token');\n        if (token) {\n            // console.log('setting access token to ajax request');\n            jqXHR.setRequestHeader('Authorization', 'Bearer ' + token);\n\n        } else {\n            console.log('no token available ...');\n        }\n    }\n});\n\n$.ajaxSetup({\n    dataType: 'json',\n    contentType: 'application/json',\n    processData: false,\n    beforeSend: function(jqXHR, options) {\n        if (options.contentType === \"application/json\" && typeof options.data != \"string\") {\n            options.data = JSON.stringify(options.data);\n        }\n    }\n});\n\n\n// Enable string formatting\nformat.extend(String.prototype, {});\n\n\n// Render render render\nReactDOM.render(\n    <App />, \n    document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}